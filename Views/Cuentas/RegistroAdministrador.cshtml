@model RegistroViewModel

@{
    ViewData["Title"] = "Registro de administrador";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-center">
    <div class="card w-50 p-4">
        <h2 class="card-title text-center">Registro de administrador</h2>
        <form asp-controller="Cuentas" asp-action="RegistroAdministrador" method="post" role="form" id="adminRegistrationForm">
            <div class="text-danger" asp-validation-summary="All"></div>

            <div class="form-group">
                <label asp-for="Nombre" class="col-md-2"></label>
                <div class="col-md-10">
                    <input asp-for="Nombre" class="form-control" />
                    <span asp-validation-for="Nombre" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="col-md-2"></label>
                <div class="col-md-10">
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <!-- Agregué mb-3 aquí -->
                <label asp-for="Url" class="col-md-2"></label>
                <div class="col-md-10">
                    <input asp-for="Url" class="form-control" />
                    <span asp-validation-for="Url" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Telefono" class="col-md-2"></label>
                <div class="col-md-10">
                    <input asp-for="Telefono" class="form-control" />
                    <span asp-validation-for="Telefono" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row mb-3">
                <!-- Agregué mb-3 aquí -->
                <div class="col-md-6 position-relative mb-3">
                    <label asp-for="Password"></label>
                    <input asp-for="Password" type="password" class="form-control" id="Password" />
                    <span asp-validation-for="Password" class="text-danger" id="passwordValidation" style="display:none;"></span>
                    <button type="button" id="togglePassword" class="password-toggle" style="position: absolute; right: 30px; top: 70%; transform: translateY(-50%);">
                        <i class="bi bi-eye-slash"></i>
                    </button>
                </div>
                <div class="col-md-6 position-relative mb-3">
                    <label asp-for="ConfirmPassword"></label>
                    <input asp-for="ConfirmPassword" type="password" class="form-control" id="ConfirmPassword" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger" id="confirmPasswordValidation" style="display:none;"></span>
                    <button type="button" id="toggleConfirmPassword" class="password-toggle" style="position: absolute; right: 30px; top: 70%; transform: translateY(-50%);">
                        <i class="bi bi-eye-slash"></i>
                    </button>
                </div>
            </div>

            <div class="form-group row mb-4">
                <div class="col-md-10">
                    <button type="submit" class="btn btn-primary btn-block">Registrar</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const togglePassword = document.getElementById('togglePassword');
            const passwordField = document.getElementById('Password');

            if (togglePassword && passwordField) {
                togglePassword.addEventListener('click', function () {
                    const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordField.setAttribute('type', type);
                    this.querySelector('i').classList.toggle('bi-eye');
                    this.querySelector('i').classList.toggle('bi-eye-slash');
                });
            }

            const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
            const confirmPasswordField = document.getElementById('ConfirmPassword');

            if (toggleConfirmPassword && confirmPasswordField) {
                toggleConfirmPassword.addEventListener('click', function () {
                    const type = confirmPasswordField.getAttribute('type') === 'password' ? 'text' : 'password';
                    confirmPasswordField.setAttribute('type', type);
                    this.querySelector('i').classList.toggle('bi-eye');
                    this.querySelector('i').classList.toggle('bi-eye-slash');
                });
            }

            const form = document.getElementById('registrationForm');
            form.addEventListener('submit', function (event) {
                const password = passwordField.value;
                const confirmPassword = confirmPasswordField.value;
                const passwordValidation = document.getElementById('passwordValidation');
                const confirmPasswordValidation = document.getElementById('confirmPasswordValidation');

                // Reset validation messages
                passwordValidation.style.display = 'none';
                confirmPasswordValidation.style.display = 'none';

                // Check if passwords match
                if (password !== confirmPassword) {
                    event.preventDefault(); // Prevent form submission
                    confirmPasswordValidation.innerText = 'Las contraseñas no coinciden.';
                    confirmPasswordValidation.style.display = 'block';
                }
            });
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
